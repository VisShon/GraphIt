type Member{
	id:ID!,
	name: String!,
	email: String,
	phone: String,
}

type Department{
	id: ID!,
	teamLead: Member,
	name: String!,
	lastMilestone: String,
	status: String
}

enum Status {
	NEW = "first meeting done",
	INPROGRESS = "In Progress",
	COMPLETED= "Task completed and team is free",
}

type Query {
	members: [member], 
	member(id:ID!): member, 
	departments:[Department],
	department(id:ID!): Department,
}


type Mutation {
	addMember(name:String!, email:String!, phone:String!):Member,
	deleteMember(id:ID!):NULL,
	updateProject(id:ID!,name:String, lastMilestone:String, status:Status):Department,
	changeTeamLead(id:ID!,teamLead: Member):Department,
	

}