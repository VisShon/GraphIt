type Department{
	_id: ID!,
	teamLead: Member,
	name: String,
	lastMilestone: String,
	status: String
}

enum Status {
	NEW,
	INPROGRESS,
	COMPLETE,
}

type Query {
	departments:[Department],
	department(_id:ID!): Department,
}

type Mutation {
    addDepartment(department:CreateDepartmentInput):Department!,
	updateDepartment(_id:ID!,department:UpdateDepartmentInput):Department!,
	changeTeamLead(_id:ID!,department:ChangeTeamLeadInput):Department!,
    deleteDepartment(_id:ID!):Department!
}

input CreateDepartmentInput {
    teamLead: ID,
	name: String!,
	lastMilestone: String,
	status: Status
}

input ChangeTeamLeadInput {
    teamLead: ID!,
}
  
input UpdateDepartmentInput {
	name: String,
	lastMilestone: String,
	status: Status
} 